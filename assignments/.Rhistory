library(tidycensus)
library(tidycensus)
library(tidyverse)
library(knitr)
census_api_key("e17c1c6ce413dc3faca31a17a58ab3374404bb9e")
install = TRUE
# Load required packages (hint: you need tidy census, tidyverse, and knitr)
# Set your Census API key
# Choose your state for analysis - assign it to a variable called my_state
# Write your get_acs() code here
# Clean the county names to remove state name and "County"
# Hint: use mutate() with str_remove()
# Display the first few rows
state_pop <- get_acs(
geography = "New York",
variables = "B01003_001",  # Total population
year = 2022,
survey = "acs5"
)
state_pop <- get_acs(
geography = "county",
variables = "B01003_001",
year = 2022,
survey = "acs5"
)
glimpse(state_pop)
pa_data <- get_acs(
geography = "county",
variables = c(
total_pop = "B01003_001",
median_income = "B19013_001"
),
state = "NY",
year = 2022,
output = "wide"
)
head(ny_data)
state_pop <- get_acs(
geography = "county",
variables = "B01003_001",
state = "NY",
year = 2022,
survey = "acs5"
)
glimpse(state_pop)
pa_data <- get_acs(
geography = "county",
variables = c(
total_pop = "B01003_001",
median_income = "B19013_001"
),
state = "NY",
year = 2022,
output = "wide"
)
head(ny_data)
state_pop <- get_acs(
geography = "county",
variables = "B01003_001",
state = "NY",
year = 2022,
survey = "acs5"
)
glimpse(state_pop)
ny_data <- get_acs(
geography = "county",
variables = c(
total_pop = "B01003_001",
median_income = "B19013_001"
),
state = "NY",
year = 2022,
output = "wide"
)
head(ny_data)
ny_clean <- ny_data %>%
mutate(
county_name = str_remove(NAME, ", New York"),
county_name = str_remove(county_name, " County")
)
select(ny_clean, NAME, county_name)
pa_reliability <- pa_clean %>%
mutate(
moe_percentage = round((median_incomeM / median_incomeE) * 100, 2),
reliability = case_when(
moe_percentage < 5 ~ "High Confidence",
moe_percentage >= 5 & moe_percentage <= 10 ~ "Moderate",
moe_percentage > 10 ~ "Low Confidence"
)
)
select(ny_clean, NAME, county_name)
ny_reliability <- ny_clean %>%
mutate(
moe_percentage = round((median_incomeM / median_incomeE) * 100, 2),
reliability = case_when(
moe_percentage < 5 ~ "High Confidence",
moe_percentage >= 5 & moe_percentage <= 10 ~ "Moderate",
moe_percentage > 10 ~ "Low Confidence"
)
)
count(ny_reliability, reliability)
high_uncertainty <- ny_reliability %>%
filter(moe_percentage > 8) %>%
arrange(desc(moe_percentage)) %>%
select(county_name, median_incomeE, moe_percentage)
reliability_summary <- ny_reliability %>%
group_by(reliability) %>%
summarize(
counties = n(),
avg_income = round(mean(median_incomeE, na.rm = TRUE), 0)
)
kable(high_uncertainty,
col.names = c("County", "Median Income", "MOE %"),
caption = "Counties with Highest Income Data Uncertainty",
format.args = list(big.mark = ","))
View(ny_reliability)
selected_counties <- county_reliability %>%
filter(
county_name %in% c("Albany", "Schuyler", "Hamilton")
)
selected_counties <- ny_reliability %>%
filter(
county_name %in% c("Albany", "Schuyler", "Hamilton")
)
selected_counties %>%
selected(county_name, median_incomeE, moe_percent, reliablility)
selected_counties <- ny_reliability %>%
filter(
county_name %in% c("Albany", "Schuyler", "Hamilton")
)
selected_counties %>%
select(county_name, median_incomeE, moe_percent, reliablility)
selected_counties <- ny_reliability %>%
filter(
county_name %in% c("Albany", "Schuyler", "Hamilton")
)
selected_counties %>%
select(county_name, median_incomeE, MOE_percent, reliablility)
selected_counties <- ny_reliability %>%
filter(
county_name %in% c("Albany", "Schuyler", "Hamilton")
)
selected_counties %>%
select(county_name, median_incomeE, moe_percentage, reliability)
selected_counties <- c("Albany", "Hamilton", "Schuyler")
ny_lookup <- tidycensus::fips_codes %>%
filter(state == "NY", county %in% paste0(selected_counties, " County")) %>%
distinct(county_code, county) %>%
mutate(county_name = str_remove(county, " County")) %>%
select(county_code, county_name)
race/ethnicity <- get_acs(
geography = "tract",
variables = c(
white     = "B03002_003",
black     = "B03002_004",
hispanic  = "B03002_012",
total_pop = "B01003_001"
),
state = "NY",
county = ny_lookup$county_code,
year = 2022,
survey = "acs5"
)
race/ethnicity
selected_counties <- c("Albany", "Hamilton", "Schuyler")
ny_lookup <- tidycensus::fips_codes %>%
filter(state == "NY", county %in% paste0(selected_counties, " County")) %>%
distinct(county_code, county) %>%
mutate(county_name = str_remove(county, " County")) %>%
select(county_code, county_name)
tract_demo <- get_acs(
geography = "tract",
variables = c(
white     = "B03002_003",
black     = "B03002_004",
hispanic  = "B03002_012",
total_pop = "B01003_001"
),
state = "NY",
county = ny_lookup$county_code,
year = 2022,
survey = "acs5"
)
glimpse(race/ethnicity)
selected_counties <- c("Albany", "Hamilton", "Schuyler")
ny_lookup <- tidycensus::fips_codes %>%
filter(state == "NY", county %in% paste0(selected_counties, " County")) %>%
distinct(county_code, county) %>%
mutate(county_name = str_remove(county, " County")) %>%
select(county_code, county_name)
tract_demo <- get_acs(
geography = "tract",
variables = c(
white     = "B03002_003",
black     = "B03002_004",
hispanic  = "B03002_012",
total_pop = "B01003_001"
),
state = "NY",
county = ny_lookup$county_code,
year = 2022,
survey = "acs5"
)
glimpse(tract_demo)
ny_data <- get_acs(
geography = "county",
variables = c(
total_pop = "B01003_001",
median_income = "B19013_001"
),
state = "NY",
year = 2022,
output = "wide"
)
tract_demo <- tract_demo %>%
mutate(
white_pct    = if_else(total_popE > 0, whiteE    / total_popE, NA_real_),
black_pct    = if_else(total_popE > 0, blackE    / total_popE, NA_real_),
hispanic_pct = if_else(total_popE > 0, hispanicE / total_popE, NA_real_)
)
selected_counties <- c("Albany", "Hamilton", "Schuyler")
ny_lookup <- tidycensus::fips_codes %>%
filter(state == "NY", county %in% paste0(selected_counties, " County")) %>%
distinct(county_code, county) %>%
mutate(county_name = str_remove(county, " County")) %>%
select(county_code, county_name)
tract_demo <- get_acs(
geography = "tract",
variables = c(
white     = "B03002_003",
black     = "B03002_004",
hispanic  = "B03002_012",
total_popE = "B01003_001"
),
state = "NY",
county = ny_lookup$county_code,
year = 2022,
survey = "acs5"
)
glimpse(tract_demo)
ny_data <- get_acs(
geography = "county",
variables = c(
total_pop = "B01003_001",
median_income = "B19013_001"
),
state = "NY",
year = 2022,
output = "wide"
)
tract_demo <- tract_demo %>%
mutate(
white_pct    = if_else(total_pop > 0, whiteE    / total_pop, NA_real_),
black_pct    = if_else(total_pop > 0, blackE    / total_pop, NA_real_),
hispanic_pct = if_else(total_pop > 0, hispanicE / total_pop, NA_real_)
)
selected_counties <- c("Albany", "Hamilton", "Schuyler")
ny_lookup <- tidycensus::fips_codes %>%
filter(state == "NY", county %in% paste0(selected_counties, " County")) %>%
distinct(county_code, county) %>%
mutate(county_name = str_remove(county, " County")) %>%
select(county_code, county_name)
race <- get_acs(
geography = "tract",
variables = c(
white     = "B03002_003",
black     = "B03002_004",
hispanic  = "B03002_012",
total_popE = "B03002_001"
),
state = "NY",
county = ny_lookup$county_code,
year = 2022,
survey = "acs5"
)
glimpse(tract_demo)
ny_data <- get_acs(
geography = "county",
variables = c(
total_pop = "B01003_001",
median_income = "B19013_001"
),
state = "NY",
year = 2022,
output = "wide"
)
race <- race %>%
mutate(
white_pct    = if_else(total_popE > 0, whiteE    / total_popE, NA_real_),
black_pct    = if_else(total_popE > 0, blackE    / total_popE, NA_real_),
hispanic_pct = if_else(total_popE > 0, hispanicE / total_popE, NA_real_)
)
selected_counties <- c("Albany", "Hamilton", "Schuyler")
ny_lookup <- tidycensus::fips_codes %>%
filter(state == "NY", county %in% paste0(selected_counties, " County")) %>%
distinct(county_code, county) %>%
mutate(county_name = str_remove(county, " County")) %>%
select(county_code, county_name)
race <- get_acs(
geography = "tract",
variables = c(
white     = "B03002_003",
black     = "B03002_004",
hispanic  = "B03002_012",
total_popE = "B03002_001"
),
state = "NY",
county = ny_lookup$county_code,
year = 2022,
survey = "acs5"
)
race <- race %>%
mutate(
white_pct    = if_else(total_popE > 0, whiteE    / total_popE, NA_real_),
black_pct    = if_else(total_popE > 0, blackE    / total_popE, NA_real_),
hispanic_pct = if_else(total_popE > 0, hispanicE / total_popE, NA_real_)
)
selected_counties <- c("Albany", "Hamilton", "Schuyler")
ny_lookup <- tidycensus::fips_codes %>%
filter(state == "NY", county %in% paste0(selected_counties, " County")) %>%
distinct(county_code, county) %>%
mutate(county_name = str_remove(county, " County")) %>%
select(county_code, county_name)
race <- get_acs(
geography = "tract",
variables = c(
white     = "B03002_003",
black     = "B03002_004",
hispanic  = "B03002_012",
total_popE = "B03002_001"
),
state = "NY",
county = ny_lookup$county_code,
year = 2022,
survey = "acs5",
output = "wide"
)
race <- race %>%
mutate(
white_pct    = if_else(total_popE > 0, whiteE    / total_popE, NA_real_),
black_pct    = if_else(total_popE > 0, blackE    / total_popE, NA_real_),
hispanic_pct = if_else(total_popE > 0, hispanicE / total_popE, NA_real_)
)
selected_counties <- c("Albany", "Hamilton", "Schuyler")
ny_lookup <- tidycensus::fips_codes %>%
filter(state == "NY", county %in% paste0(selected_counties, " County")) %>%
distinct(county_code, county) %>%
mutate(county_name = str_remove(county, " County")) %>%
select(county_code, county_name)
race_tract <- get_acs(
geography = "tract",
variables = c(
white     = "B03002_003",
black     = "B03002_004",
hispanic  = "B03002_012",
total_pop = "B03002_001"
),
state  = "NY",
county = ny_lookup$county_code,
year   = 2022,
survey = "acs5",
output = "wide"
)
race_tract <- race_tract %>%
mutate(
white_pct    = if_else(total_popE > 0, whiteE    / total_popE, NA_real_),
black_pct    = if_else(total_popE > 0, blackE    / total_popE, NA_real_),
hispanic_pct = if_else(total_popE > 0, hispanicE / total_popE, NA_real_)
)
race_tract <- race_tract %>%
mutate(
county_fips = str_sub(GEOID, 3, 5),
tract_id    = str_sub(GEOID, 6)
) %>%
left_join(ny_lookup, by = c("county_fips" = "county_code")) %>%
mutate(
tract_label = paste0(county_name, " County – Tract ", tract_id)
)
race_tract %>%
select(GEOID, tract_label, county_name,
total_popE, whiteE, blackE, hispanicE,
white_pct, black_pct, hispanic_pct) %>%
arrange(county_name, tract_label) %>%
head(race_tract)
selected_counties <- c("Albany", "Hamilton", "Schuyler")
ny_lookup <- tidycensus::fips_codes %>%
filter(state == "NY", county %in% paste0(selected_counties, " County")) %>%
distinct(county_code, county) %>%
mutate(county_name = str_remove(county, " County")) %>%
select(county_code, county_name)
race_tract <- get_acs(
geography = "tract",
variables = c(
white     = "B03002_003",
black     = "B03002_004",
hispanic  = "B03002_012",
total_pop = "B03002_001"
),
state  = "NY",
county = ny_lookup$county_code,
year   = 2022,
survey = "acs5",
output = "wide"
)
race_tract <- race_tract %>%
mutate(
white_pct    = if_else(total_popE > 0, whiteE    / total_popE, NA_real_),
black_pct    = if_else(total_popE > 0, blackE    / total_popE, NA_real_),
hispanic_pct = if_else(total_popE > 0, hispanicE / total_popE, NA_real_)
)
race_tract <- race_tract %>%
mutate(
county_fips = str_sub(GEOID, 3, 5),
tract_id    = str_sub(GEOID, 6)
) %>%
left_join(ny_lookup, by = c("county_fips" = "county_code")) %>%
mutate(
tract_label = paste0(county_name, " County – Tract ", tract_id)
)
race_tract %>%
select(GEOID, tract_label, county_name,
total_popE, whiteE, blackE, hispanicE,
white_pct, black_pct, hispanic_pct) %>%
arrange(county_name, tract_label) %>%
head()
View(tract_demo)
top_hispanic <- race_tract %>%
arrange(desc(hispanic_pct)) %>%
slice(1)
top_hispanic
county_summary <- race_tract %>%
group_by(county_name) %>%
summarize(
n_tracts = n(),
avg_white_pct = mean(white_pct, na.rm = TRUE),
avg_black_pct = mean(black_pct, na.rm = TRUE),
avg_hispanic_pct = mean(hispanic_pct, na.rm = TRUE),
)
county_summary <- race_tract %>%
kable(digits = 2, caption = "Average Demographics by county (Albany, Hamilton, Schuyler)")
quarto render
quarto render
quarto render
